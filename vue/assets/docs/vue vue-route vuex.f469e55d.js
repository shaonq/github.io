import{_ as e}from"../index.0d02bb1f.js";import{q as t,l as n,I as s}from"../@vue/@vue.89516255.js";import"../shaonq/shaonq.754e411d.js";import"../vue-router/vue-router.c621da18.js";import"../pinia/pinia.5150f487.js";import"../vue-demi/vue-demi.784001c0.js";import"../quill/quill.3362dfa5.js";import"../nprogress/nprogress.18cafdd9.js";import"../echarts/echarts.22f0db08.js";import"../tslib/tslib.b9ce9c9f.js";import"../zrender/zrender.31b37330.js";import"../vite-plugin-mock/vite-plugin-mock.b4540423.js";import"../mockjs/mockjs.56624cf4.js";import"../path-to-regexp/path-to-regexp.dea237f3.js";const a={mounted(){}},o={class:"u-quill-body"},r=[s('<h1> vue 常用生命周期 <br></h1><ul style><li style><a href="https://cn.vuejs.org/v2/guide/syntax.html">模板文档</a></li><li style><a href="https://cn.vuejs.org/v2/api/">API文档</a></li></ul><pre><code class="language-javascript">\n<span style="color:#ff4e20;">vue3.x 兼容，但是不建议使用</span>\nexport default {\n  /** * data : 可用的数据，模板中的数据必须预定义 */\n  data(){ \n    return { a:1, b:2 }\n  },\n  /** * computed： 自动计算，计算阶段的数据可以出现在模板中 */\n  computed:{ \n    count(){ return this.a + this.b }\n },\n  /** * 数据计算完毕，但是未渲染模板 this.$refs还未生成 */\n <span style="color:#ff4e20;"> (vue3 change : created -&gt; setup)(){ \n    this.dataInit()\n    return {\n      c:1\n    }\n  },\n  </span>\n  /** * 书写模板中和当前生命周期中可用的方法 */\n  methods:{ \n    dataInit(){ console.log(&#39;我是请求数据等操作&#39;) \n    } },\n  /** * 监测数据发生变化 */\n  watch:{\n    count(value){console.log(&#39;我的值发生了变化&#39;)}\n    },\n  /** * 模板渲染完毕 类似jQ $(function(){}) */\n  mounted(){\n     console.log(&quot;这里能读取虚拟dom&quot;)\n      }\n}    </code></pre><h1 style>vue-route 路由配置</h1><ul style><li style="line-height:24px;"><a href="https://router.vuejs.org/zh/guide/essentials/named-routes.html">官方文档</a></li></ul><pre><code class="language-javascript">\n<span style="color:#ff4e20;">vue3.x vueRoute4 api不再适用</span>\n { path: &#39;/** 路由访问地址 */&#39;,\n   component: function(){return import(&#39;/* 引入 vue 文件地址 */&#39;)},\n   name:&#39;/** 路由名称 */&#39;,\n   redirect:&#39;/** 路由重定向 */&#39;,\n   meta:{auth：true}, /**  其他信息 比如必须需要登录 */\n }\n   </code> </pre><h1 style>vuex 状态管理</h1><ul style><li style="line-height:24px;"><a href="https://vuex.vuejs.org/zh/guide/state.html">官方文档</a></li></ul><pre><code class="language-javascript">\n<span style="color:#ff4e20;">vue3.x 使用 pinia 代替</span>\nconst store = new Vuex.Store({\n  /** * state : 全局 this.$store.state 只读 */\n  state: {\n    todos: [ { id: 1, name: &#39;张三&#39; }, { id: 2, name: &#39;李四&#39; } ]\n  },\n  /**\n   * 修改 state 全局this.$store.commit(&#39;addName&#39;,{id:3,name:&#39;王五&#39;}) 触发\n   * [重要]只有 mutations 阶段可以修改 state\n   */\n  mutations：{\n    addName(state,userInfo){ state.push(userInfo) }\n  }, \n  /** * action : 分发阶段 this.$store.dispatch(&#39;addName2&#39;) */\n  action:{\n    addName2(state){ state.commit(&#39;addName&#39;,{id:3,name:&#39;王五&#39;}) }\n  },\n  /** *  getters : 全局 this.$store.getters 只读  返回state计算后的值或者方法 */\n  getters: {\n     getNames: function(state) { return state.todos.filter(function(todo){ return todo.name}) }\n  }\n})\nexport default store\n   </code> </pre><h1>END</h1>',10)];var i=e(a,[["render",function(e,s,a,i,u,l){return n(),t("div",o,r)}]]);export{i as default};
