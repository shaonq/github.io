import{_ as e}from"../index.9f27818f.js";import{q as t,l as r,I as n}from"../@vue/@vue.206ece97.js";import"../shaonq/shaonq.754e411d.js";import"../vue-router/vue-router.f52d84b4.js";import"../pinia/pinia.589cd647.js";import"../vue-demi/vue-demi.784001c0.js";import"../quill/quill.3362dfa5.js";import"../nprogress/nprogress.18cafdd9.js";import"../echarts/echarts.22f0db08.js";import"../tslib/tslib.b9ce9c9f.js";import"../zrender/zrender.31b37330.js";import"../vite-plugin-mock/vite-plugin-mock.b4540423.js";import"../mockjs/mockjs.56624cf4.js";import"../path-to-regexp/path-to-regexp.dea237f3.js";const s={mounted(){}},a={class:"u-quill-body"},o=[n('<h1> vue 常用生命周期 <br></h1><ul style><li style><a href="https://cn.vuejs.org/v2/guide/syntax.html">模板文档</a></li><li style><a href="https://cn.vuejs.org/v2/api/">API文档</a></li></ul><pre><code class="language-javascript">\r\n<span style="color:#ff4e20;">vue3.x 兼容，但是不建议使用</span>\r\nexport default {\r\n  /** * data : 可用的数据，模板中的数据必须预定义 */\r\n  data(){ \r\n    return { a:1, b:2 }\r\n  },\r\n  /** * computed： 自动计算，计算阶段的数据可以出现在模板中 */\r\n  computed:{ \r\n    count(){ return this.a + this.b }\r\n },\r\n  /** * 数据计算完毕，但是未渲染模板 this.$refs还未生成 */\r\n <span style="color:#ff4e20;"> (vue3 change : created -&gt; setup)(){ \r\n    this.dataInit()\r\n    return {\r\n      c:1\r\n    }\r\n  },\r\n  </span>\r\n  /** * 书写模板中和当前生命周期中可用的方法 */\r\n  methods:{ \r\n    dataInit(){ console.log(&#39;我是请求数据等操作&#39;) \r\n    } },\r\n  /** * 监测数据发生变化 */\r\n  watch:{\r\n    count(value){console.log(&#39;我的值发生了变化&#39;)}\r\n    },\r\n  /** * 模板渲染完毕 类似jQ $(function(){}) */\r\n  mounted(){\r\n     console.log(&quot;这里能读取虚拟dom&quot;)\r\n      }\r\n}    </code></pre><h1 style>vue-route 路由配置</h1><ul style><li style="line-height:24px;"><a href="https://router.vuejs.org/zh/guide/essentials/named-routes.html">官方文档</a></li></ul><pre><code class="language-javascript">\r\n<span style="color:#ff4e20;">vue3.x vueRoute4 api不再适用</span>\r\n { path: &#39;/** 路由访问地址 */&#39;,\r\n   component: function(){return import(&#39;/* 引入 vue 文件地址 */&#39;)},\r\n   name:&#39;/** 路由名称 */&#39;,\r\n   redirect:&#39;/** 路由重定向 */&#39;,\r\n   meta:{auth：true}, /**  其他信息 比如必须需要登录 */\r\n }\r\n   </code> </pre><h1 style>vuex 状态管理</h1><ul style><li style="line-height:24px;"><a href="https://vuex.vuejs.org/zh/guide/state.html">官方文档</a></li></ul><pre><code class="language-javascript">\r\n<span style="color:#ff4e20;">vue3.x 使用 pinia 代替</span>\r\nconst store = new Vuex.Store({\r\n  /** * state : 全局 this.$store.state 只读 */\r\n  state: {\r\n    todos: [ { id: 1, name: &#39;张三&#39; }, { id: 2, name: &#39;李四&#39; } ]\r\n  },\r\n  /**\r\n   * 修改 state 全局this.$store.commit(&#39;addName&#39;,{id:3,name:&#39;王五&#39;}) 触发\r\n   * [重要]只有 mutations 阶段可以修改 state\r\n   */\r\n  mutations：{\r\n    addName(state,userInfo){ state.push(userInfo) }\r\n  }, \r\n  /** * action : 分发阶段 this.$store.dispatch(&#39;addName2&#39;) */\r\n  action:{\r\n    addName2(state){ state.commit(&#39;addName&#39;,{id:3,name:&#39;王五&#39;}) }\r\n  },\r\n  /** *  getters : 全局 this.$store.getters 只读  返回state计算后的值或者方法 */\r\n  getters: {\r\n     getNames: function(state) { return state.todos.filter(function(todo){ return todo.name}) }\r\n  }\r\n})\r\nexport default store\r\n   </code> </pre><h1>END</h1>',10)];var i=e(s,[["render",function(e,n,s,i,u,l){return r(),t("div",a,o)}]]);export{i as default};
